{
	"name": "Notebook 1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "u2ulabpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "d0f362c7-97a3-49a9-a828-681fca1f9ef7"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/43434087-aa01-4ba9-ad75-3167d91a5c1c/resourceGroups/rg-u2u-lli/providers/Microsoft.Synapse/workspaces/lli-synapseworksapce/bigDataPools/u2ulabpool",
				"name": "u2ulabpool",
				"type": "Spark",
				"endpoint": "https://lli-synapseworksapce.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/u2ulabpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# hello wold\n",
					"\n",
					"$$\\sum_{i=1}^{10} i^2$$\n",
					"\n",
					""
				]
			},
			{
				"cell_type": "code",
				"source": [
					"1+2"
				],
				"execution_count": 44
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# my reeal test "
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import SparkSession \n",
					"from pyspark.sql.types import * \n",
					"        \n",
					"# Azure storage access info \n",
					"blob_account_name = 'u2ubabssourcedatalli' # replace with your blob name \n",
					"blob_container_name = 'u2ulabs' # replace with your container name \n",
					"blob_relative_path = '/data/babs/' # replace with your relative folder path \n",
					"linked_service_name = 'ls_BABSData'"
				],
				"execution_count": 45
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# replace with your linked service name \n",
					"        \n",
					"blob_sas_token = mssparkutils.credentials.getConnectionStringOrCreds(linked_service_name) \n",
					"        \n",
					"# Allow SPARK to access from Blob remotely \n",
					"wasbs_path = 'wasbs://%s@%s.blob.core.windows.net/%s' % (blob_container_name, blob_account_name, blob_relative_path) \n",
					"spark.conf.set('fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name), blob_sas_token) \n",
					"print('Remote blob path: ' + wasbs_path) \n",
					"        \n",
					"# Read a csv file \n",
					"csv_path = wasbs_path + '201508_trip_data.csv' \n",
					"df_csv = spark.read.csv(csv_path, header = 'true') \n",
					"        \n",
					"# Read a parquet file \n",
					"# parquet_path = wasbs_path + '201508_trip_data.csv' \n",
					"# df_parquet = spark.read.parquet(parquet_path) \n",
					"        \n",
					"# Read a json file \n",
					"# json_path = wasbs_path + '201508_trip_data.csv' \n",
					"# df_json = spark.read.json(json_path) "
				],
				"execution_count": 46
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%%sql \n",
					"create database u2udemo"
				],
				"execution_count": 47
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%%sql\n",
					"select 1+1\n",
					"show databases;"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"print (\"hello\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"display(df);"
				],
				"execution_count": 49
			}
		]
	}
}